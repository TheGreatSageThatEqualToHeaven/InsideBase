-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Local Player Setup
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

-- Globals
local random = Random.new()
local teleporting = false
local void = CFrame.new(0, -3.4028235e+38, 0)
local tpAmt = 60

-- Update character on respawn
player.CharacterAdded:Connect(function(newChar)
	char = newChar
	humanoid = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end)

-- Ping-based dynamic teleport amount
task.spawn(function()
	while true do
		local ping = player:GetNetworkPing() * 1000
		tpAmt = math.clamp(math.floor(ping * 0.7), 20, 90)
		RunService.Heartbeat:Wait()
	end
end)

-- Smooth teleport function
local function TP(position)
	if not teleporting and hrp then
		teleporting = true
		if typeof(position) == "CFrame" then
			local jitter = Vector3.new(
				random:NextNumber(-0.0001, 0.0001),
				random:NextNumber(-0.0001, 0.0001),
				random:NextNumber(-0.0001, 0.0001)
			)
			hrp.CFrame = position + jitter
			RunService.Heartbeat:Wait()
		end
		teleporting = false
	end
end

-- Check if player stayed at position for duration
local function stayedAtTarget(targetPos, threshold, duration)
	local start = tick()
	while tick() - start < duration do
		if (hrp.Position - targetPos).Magnitude > threshold then
			return false
		end
		RunService.Heartbeat:Wait()
	end
	return true
end

-- Teleport to your plot's Multiplier part
local function TPToyourMultiplierPart()
	local yourName = player.Name
	local plotsFolder = workspace:FindFirstChild("Plots")
	if not plotsFolder then return end

	local yourPlot
	for _, plot in pairs(plotsFolder:GetChildren()) do
		local plotSign = plot:FindFirstChild("PlotSign")
		if plotSign then
			local label = plotSign:FindFirstChild("SurfaceGui")
				and plotSign.SurfaceGui:FindFirstChild("Frame")
				and plotSign.SurfaceGui.Frame:FindFirstChild("TextLabel")
			if label then
				local content = (label.Text or ""):lower()
				local pattern = yourName:lower() .. "[Â´'`]" .. "s base"
				if content:find(pattern) then
					yourPlot = plot
					break
				end
			end
		end
	end

	if not yourPlot then return end

	local multiplierPart = yourPlot:FindFirstChild("Multiplier")
	if not multiplierPart or not multiplierPart:IsA("BasePart") then return end

	local target = multiplierPart.CFrame * CFrame.new(0, 2, 0)

	while true do
		-- Phase 1: Initial spam TP
		for i = 1, math.floor((tpAmt or 60) * 0.7) do TP(target) end

		-- Phase 2: Void reset
		TP(void) RunService.Heartbeat:Wait()
		TP(void) RunService.Heartbeat:Wait()

		-- Phase 3: Final precision TP
		for i = 1, math.floor((tpAmt or 60) / 10) do
			TP(target)
			RunService.Heartbeat:Wait()
		end

		-- Final boost
		for i = 1, 5 do
			TP(target)
			RunService.Heartbeat:Wait()
		end

		-- Check if stayed at position for 3 seconds
		local closeEnough = stayedAtTarget(target.Position, 10, 3)
		if closeEnough then
			print("Successfully teleported and stable at Multiplier.")
			break
		else
			print("Teleport failed. Retrying...")
			task.wait(0.5)
		end
	end
end

-- Run teleport
TPToyourMultiplierPart()
