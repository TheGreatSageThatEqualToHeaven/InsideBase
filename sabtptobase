-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Player Setup
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- State
local plotsFolder = Workspace:WaitForChild("Plots")
local random = Random.new()
local teleporting = false
local void = CFrame.new(0, -3.4028235e+38, 0)
local tpAmt = 60

-- Update TP power based on ping
task.spawn(function()
	while true do
		local ping = player:GetNetworkPing() * 1000
		tpAmt = math.clamp(math.floor(ping * 0.7), 20, 90)
		RunService.Heartbeat:Wait()
	end
end)

-- Jittered teleport method
local function TP(pos)
	if teleporting or not humanoidRootPart then return end
	teleporting = true
	if typeof(pos) == "CFrame" then
		humanoidRootPart.CFrame = pos + Vector3.new(
			random:NextNumber(-0.0001, 0.0001),
			random:NextNumber(-0.0001, 0.0001),
			random:NextNumber(-0.0001, 0.0001)
		)
		RunService.Heartbeat:Wait()
	end
	teleporting = false
end

-- Reliable TP with void + verification
local function teleportWithVerification(cframe, retries)
	local threshold = 5
	for i = 1, (retries or 3) do
		for _ = 1, math.floor(tpAmt * 0.7) do TP(cframe) end
		TP(void); RunService.Heartbeat:Wait()
		TP(void); RunService.Heartbeat:Wait()
		for _ = 1, math.floor(tpAmt / 10) do TP(cframe); RunService.Heartbeat:Wait() end
		task.wait(2)
		if (humanoidRootPart.Position - cframe.Position).Magnitude <= threshold then
			return true
		end
	end
	return false
end

-- Find your own delivery hitbox
local function findYourDeliveryHitbox()
	for _, plot in ipairs(plotsFolder:GetChildren()) do
		local sign = plot:FindFirstChild("PlotSign")
		local surfaceGui = sign and sign:FindFirstChild("SurfaceGui")
		local frame = surfaceGui and surfaceGui:FindFirstChild("Frame")
		local textLabel = frame and frame:FindFirstChild("TextLabel")
		if textLabel and string.find(textLabel.Text, player.Name) then
			return plot:FindFirstChild("DeliveryHitbox")
		end
	end
end

-- Main logic
local deliveryHitbox = findYourDeliveryHitbox()
if deliveryHitbox then
	local targetCFrame = deliveryHitbox.CFrame * CFrame.new(0, -3, 0)
	print("Teleporting to DeliveryHitbox...")
	teleportWithVerification(targetCFrame, 5)
else
	warn("DeliveryHitbox not found for your plot.")
end
